{
  "C:\\Users\\Ayush Pandita\\OneDrive\\Desktop\\Internship\\Wcrtbackend\\serverless.yml": {
    "versionFramework": "4.17.1",
    "servicePath": "C:\\Users\\Ayush Pandita\\OneDrive\\Desktop\\Internship\\Wcrtbackend\\serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "wcrt-backend",
      "useDotenv": true,
      "provider": {
        "name": "aws",
        "runtime": "nodejs18.x",
        "region": "eu-north-1",
        "environment": {
          "JWT_SECRET": "<REDACTED>",
          "ADMIN_TABLE": "wcrt-admin",
          "POSTS_TABLE": "wcrt-posts",
          "WRITER_TABLE": "wcrt-writers",
          "S3_BUCKET": "wcrt-content-images",
          "COMMENTS_TABLE": "wcrt-comments"
        },
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "dynamodb:PutItem",
              "dynamodb:GetItem",
              "dynamodb:Scan",
              "dynamodb:DeleteItem",
              "dynamodb:UpdateItem"
            ],
            "Resource": [
              "arn:aws:dynamodb:eu-north-1:*:table/wcrt-posts",
              "arn:aws:dynamodb:eu-north-1:*:table/wcrt-writers",
              "arn:aws:dynamodb:eu-north-1:*:table/wcrt-admin",
              "arn:aws:dynamodb:eu-north-1:*:table/wcrt-comments",
              "arn:aws:dynamodb:eu-north-1:*:table/wcrt-views"
            ]
          },
          {
            "Effect": "Allow",
            "Action": [
              "s3:PutObject",
              "s3:GetObject",
              "s3:PutObjectAcl"
            ],
            "Resource": "arn:aws:s3:::wcrt-content-images/*"
          }
        ],
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "AppLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/wcrt-backend-dev-app"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "wcrt-backend",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/wcrt-backend-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/wcrt-backend-dev*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "dynamodb:PutItem",
                            "dynamodb:GetItem",
                            "dynamodb:Scan",
                            "dynamodb:DeleteItem",
                            "dynamodb:UpdateItem"
                          ],
                          "Resource": [
                            "arn:aws:dynamodb:eu-north-1:*:table/wcrt-posts",
                            "arn:aws:dynamodb:eu-north-1:*:table/wcrt-writers",
                            "arn:aws:dynamodb:eu-north-1:*:table/wcrt-admin",
                            "arn:aws:dynamodb:eu-north-1:*:table/wcrt-comments",
                            "arn:aws:dynamodb:eu-north-1:*:table/wcrt-views"
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "s3:PutObject",
                            "s3:GetObject",
                            "s3:PutObjectAcl"
                          ],
                          "Resource": "arn:aws:s3:::wcrt-content-images/*"
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "wcrt-backend",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "AppLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-aa1edb09-c88d",
                  "S3Key": "serverless/wcrt-backend/dev/1752168845801-2025-07-10T17:34:05.801Z/wcrt-backend.zip"
                },
                "Handler": "handler.handler",
                "Runtime": "nodejs18.x",
                "FunctionName": "wcrt-backend-dev-app",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "ADMIN_TABLE": "wcrt-admin",
                    "POSTS_TABLE": "wcrt-posts",
                    "WRITER_TABLE": "wcrt-writers",
                    "S3_BUCKET": "wcrt-content-images",
                    "COMMENTS_TABLE": "wcrt-comments"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "AppLogGroup"
              ]
            },
            "AppLambdaVersionaYpzJEXlAZGpQzZPvgBeWK6ca1ASWakYoH2lxNGeqwQ": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "AppLambdaFunction"
                },
                "CodeSha256": "FJxUQKwj3FBTir6V+eHe625A1QKsemvskFh1mUsCDF0="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-wcrt-backend",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceProxyVar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "{proxy+}",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodProxyVarAny": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "ANY",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceProxyVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "AppLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "AppLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1752168812360": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodProxyVarAny"
              ]
            },
            "AppLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "AppLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-eu-north-1-aa1edb09-c88d",
              "Export": {
                "Name": "sls-wcrt-backend-dev-ServerlessDeploymentBucketName"
              }
            },
            "AppLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "AppLambdaVersionaYpzJEXlAZGpQzZPvgBeWK6ca1ASWakYoH2lxNGeqwQ"
              },
              "Export": {
                "Name": "sls-wcrt-backend-dev-AppLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-wcrt-backend-dev-ServiceEndpoint"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "app": {
          "handler": "handler.handler",
          "events": [
            {
              "http": {
                "path": "{proxy+}",
                "method": "any",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "wcrt-backend-dev-app",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "AppLambdaVersionaYpzJEXlAZGpQzZPvgBeWK6ca1ASWakYoH2lxNGeqwQ"
        }
      },
      "plugins": [
        "serverless-offline"
      ]
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "region": "eu-north-1",
      "environment": {
        "JWT_SECRET": "<REDACTED>",
        "ADMIN_TABLE": "wcrt-admin",
        "POSTS_TABLE": "wcrt-posts",
        "WRITER_TABLE": "wcrt-writers",
        "S3_BUCKET": "wcrt-content-images",
        "COMMENTS_TABLE": "wcrt-comments"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:PutItem",
            "dynamodb:GetItem",
            "dynamodb:Scan",
            "dynamodb:DeleteItem",
            "dynamodb:UpdateItem"
          ],
          "Resource": [
            "arn:aws:dynamodb:eu-north-1:*:table/wcrt-posts",
            "arn:aws:dynamodb:eu-north-1:*:table/wcrt-writers",
            "arn:aws:dynamodb:eu-north-1:*:table/wcrt-admin",
            "arn:aws:dynamodb:eu-north-1:*:table/wcrt-comments",
            "arn:aws:dynamodb:eu-north-1:*:table/wcrt-views"
          ]
        },
        {
          "Effect": "Allow",
          "Action": [
            "s3:PutObject",
            "s3:GetObject",
            "s3:PutObjectAcl"
          ],
          "Resource": "arn:aws:s3:::wcrt-content-images/*"
        }
      ],
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "AppLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/wcrt-backend-dev-app"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "wcrt-backend",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/wcrt-backend-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/wcrt-backend-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:PutItem",
                          "dynamodb:GetItem",
                          "dynamodb:Scan",
                          "dynamodb:DeleteItem",
                          "dynamodb:UpdateItem"
                        ],
                        "Resource": [
                          "arn:aws:dynamodb:eu-north-1:*:table/wcrt-posts",
                          "arn:aws:dynamodb:eu-north-1:*:table/wcrt-writers",
                          "arn:aws:dynamodb:eu-north-1:*:table/wcrt-admin",
                          "arn:aws:dynamodb:eu-north-1:*:table/wcrt-comments",
                          "arn:aws:dynamodb:eu-north-1:*:table/wcrt-views"
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "s3:PutObject",
                          "s3:GetObject",
                          "s3:PutObjectAcl"
                        ],
                        "Resource": "arn:aws:s3:::wcrt-content-images/*"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "wcrt-backend",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "AppLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-aa1edb09-c88d",
                "S3Key": "serverless/wcrt-backend/dev/1752168845801-2025-07-10T17:34:05.801Z/wcrt-backend.zip"
              },
              "Handler": "handler.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "wcrt-backend-dev-app",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "<REDACTED>",
                  "ADMIN_TABLE": "wcrt-admin",
                  "POSTS_TABLE": "wcrt-posts",
                  "WRITER_TABLE": "wcrt-writers",
                  "S3_BUCKET": "wcrt-content-images",
                  "COMMENTS_TABLE": "wcrt-comments"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "AppLogGroup"
            ]
          },
          "AppLambdaVersionaYpzJEXlAZGpQzZPvgBeWK6ca1ASWakYoH2lxNGeqwQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AppLambdaFunction"
              },
              "CodeSha256": "FJxUQKwj3FBTir6V+eHe625A1QKsemvskFh1mUsCDF0="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-wcrt-backend",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceProxyVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "{proxy+}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodProxyVarAny": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "ANY",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceProxyVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AppLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "AppLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1752168812360": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodProxyVarAny"
            ]
          },
          "AppLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AppLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-eu-north-1-aa1edb09-c88d",
            "Export": {
              "Name": "sls-wcrt-backend-dev-ServerlessDeploymentBucketName"
            }
          },
          "AppLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AppLambdaVersionaYpzJEXlAZGpQzZPvgBeWK6ca1ASWakYoH2lxNGeqwQ"
            },
            "Export": {
              "Name": "sls-wcrt-backend-dev-AppLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-wcrt-backend-dev-ServiceEndpoint"
            }
          }
        }
      },
      "vpc": {}
    },
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "serviceRawFile": "service: wcrt-backend\r\nuseDotenv: true\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs18.x\r\n  region: eu-north-1\r\n  environment:\r\n    JWT_SECRET: ${env:JWT_SECRET}\r\n    ADMIN_TABLE: ${env:ADMIN_TABLE}\r\n    POSTS_TABLE: ${env:POSTS_TABLE}\r\n    WRITER_TABLE: ${env:WRITER_TABLE}\r\n    S3_BUCKET: ${env:S3_BUCKET}\r\n    COMMENTS_TABLE: ${env:COMMENTS_TABLE}\r\n\r\n  iamRoleStatements:\r\n    - Effect: Allow\r\n      Action:\r\n        - dynamodb:PutItem\r\n        - dynamodb:GetItem\r\n        - dynamodb:Scan\r\n        - dynamodb:DeleteItem\r\n        - dynamodb:UpdateItem\r\n      Resource:\r\n        - arn:aws:dynamodb:${self:provider.region}:*:table/${env:POSTS_TABLE}\r\n        - arn:aws:dynamodb:${self:provider.region}:*:table/${env:WRITER_TABLE}\r\n        - arn:aws:dynamodb:${self:provider.region}:*:table/${env:ADMIN_TABLE}\r\n        - arn:aws:dynamodb:${self:provider.region}:*:table/${env:COMMENTS_TABLE}\r\n        - arn:aws:dynamodb:${self:provider.region}:*:table/${env:VIEWS_TABLE}\r\n    - Effect: Allow\r\n      Action:\r\n        - s3:PutObject\r\n        - s3:GetObject\r\n        - s3:PutObjectAcl\r\n      Resource: arn:aws:s3:::${env:S3_BUCKET}/*\r\n\r\nfunctions:\r\n  app:\r\n    handler: handler.handler\r\n    events:\r\n      - http:\r\n          path: /{proxy+}\r\n          method: any\r\n\r\nplugins:\r\n  - serverless-offline",
    "command": [
      "deploy"
    ],
    "options": {},
    "orgId": "327da69b-4a55-4a2c-ac9d-1970d0db98a2",
    "orgName": "ayushpandita",
    "userId": "bcXRXrykGdjMNnnGgY",
    "userName": "ayushpandita",
    "serviceProviderAwsAccountId": "863816374996",
    "serviceProviderAwsCfStackName": "wcrt-backend-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:eu-north-1:863816374996:stack/wcrt-backend-dev/97b82f80-43d9-11f0-b165-0e6b37e6d339",
    "serviceProviderAwsCfStackCreated": "2025-06-07T19:57:08.189Z",
    "serviceProviderAwsCfStackUpdated": "2025-06-21T20:35:01.206Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "AppLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:863816374996:function:wcrt-backend-dev-app:14",
        "Description": "Current Lambda function version",
        "ExportName": "sls-wcrt-backend-dev-AppLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://fpjzkivspi.execute-api.eu-north-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-wcrt-backend-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-eu-north-1-aa1edb09-c88d",
        "ExportName": "sls-wcrt-backend-dev-ServerlessDeploymentBucketName"
      }
    ],
    "compiledCloudFormationTemplate": {
      "AWSTemplateFormatVersion": "2010-09-09",
      "Description": "The AWS CloudFormation template for this Serverless application",
      "Resources": {
        "AppLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/wcrt-backend-dev-app"
          }
        },
        "IamRoleLambdaExecution": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": {
                  "Fn::Join": [
                    "-",
                    [
                      "wcrt-backend",
                      "dev",
                      "lambda"
                    ]
                  ]
                },
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogStream",
                        "logs:CreateLogGroup",
                        "logs:TagResource"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/wcrt-backend-dev*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:PutLogEvents"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/wcrt-backend-dev*:*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:PutItem",
                        "dynamodb:GetItem",
                        "dynamodb:Scan",
                        "dynamodb:DeleteItem",
                        "dynamodb:UpdateItem"
                      ],
                      "Resource": [
                        "arn:aws:dynamodb:eu-north-1:*:table/wcrt-posts",
                        "arn:aws:dynamodb:eu-north-1:*:table/wcrt-writers",
                        "arn:aws:dynamodb:eu-north-1:*:table/wcrt-admin",
                        "arn:aws:dynamodb:eu-north-1:*:table/wcrt-comments",
                        "arn:aws:dynamodb:eu-north-1:*:table/wcrt-views"
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "s3:PutObject",
                        "s3:GetObject",
                        "s3:PutObjectAcl"
                      ],
                      "Resource": "arn:aws:s3:::wcrt-content-images/*"
                    }
                  ]
                }
              }
            ],
            "Path": "/",
            "RoleName": {
              "Fn::Join": [
                "-",
                [
                  "wcrt-backend",
                  "dev",
                  {
                    "Ref": "AWS::Region"
                  },
                  "lambdaRole"
                ]
              ]
            }
          }
        },
        "AppLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-eu-north-1-aa1edb09-c88d",
              "S3Key": "serverless/wcrt-backend/dev/1752168845801-2025-07-10T17:34:05.801Z/wcrt-backend.zip"
            },
            "Handler": "handler.handler",
            "Runtime": "nodejs18.x",
            "FunctionName": "wcrt-backend-dev-app",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "JWT_SECRET": "<REDACTED>",
                "ADMIN_TABLE": "wcrt-admin",
                "POSTS_TABLE": "wcrt-posts",
                "WRITER_TABLE": "wcrt-writers",
                "S3_BUCKET": "wcrt-content-images",
                "COMMENTS_TABLE": "wcrt-comments"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "AppLogGroup"
          ]
        },
        "AppLambdaVersionaYpzJEXlAZGpQzZPvgBeWK6ca1ASWakYoH2lxNGeqwQ": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "AppLambdaFunction"
            },
            "CodeSha256": "FJxUQKwj3FBTir6V+eHe625A1QKsemvskFh1mUsCDF0="
          }
        },
        "ApiGatewayRestApi": {
          "Type": "AWS::ApiGateway::RestApi",
          "Properties": {
            "Name": "dev-wcrt-backend",
            "EndpointConfiguration": {
              "Types": [
                "EDGE"
              ]
            },
            "Policy": ""
          }
        },
        "ApiGatewayResourceProxyVar": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "{proxy+}",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodProxyVarAny": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "ANY",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceProxyVar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "AppLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "AppLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayDeployment1752168812360": {
          "Type": "AWS::ApiGateway::Deployment",
          "Properties": {
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "StageName": "dev"
          },
          "DependsOn": [
            "ApiGatewayMethodProxyVarAny"
          ]
        },
        "AppLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "AppLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        }
      },
      "Outputs": {
        "ServerlessDeploymentBucketName": {
          "Value": "serverless-framework-deployments-eu-north-1-aa1edb09-c88d",
          "Export": {
            "Name": "sls-wcrt-backend-dev-ServerlessDeploymentBucketName"
          }
        },
        "AppLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "AppLambdaVersionaYpzJEXlAZGpQzZPvgBeWK6ca1ASWakYoH2lxNGeqwQ"
          },
          "Export": {
            "Name": "sls-wcrt-backend-dev-AppLambdaFunctionQualifiedArn"
          }
        },
        "ServiceEndpoint": {
          "Description": "URL of the service endpoint",
          "Value": {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Ref": "ApiGatewayRestApi"
                },
                ".execute-api.",
                {
                  "Ref": "AWS::Region"
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix"
                },
                "/dev"
              ]
            ]
          },
          "Export": {
            "Name": "sls-wcrt-backend-dev-ServiceEndpoint"
          }
        }
      }
    }
  }
}